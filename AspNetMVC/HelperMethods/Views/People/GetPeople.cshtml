@using HelperMethods.Models
@model string
@{
    ViewBag.Title = "Данные пользователей";
    Layout = "/Views/Shared/_Layout.cshtml";
    AjaxOptions ajaxOptions = new AjaxOptions
    {
        UpdateTargetId = "tableBody",
        Url = Url.Action("GetPeopleData"),
        LoadingElementDuration = 1000,
        LoadingElementId = "loading",
        Confirm = "Вы действительно хотите получить новые данные?"
    };
}

<script type="text/javascript">
    function OnBegin() {
        console.log('Это сообщение получено из обработчика onBegin')
    }
    function OnSuccess(data) {
        console.log('Это сообщение получено из обработчика onSuccess: ' + data)
    }
    function OnFailure(request, error) {
        console.log('Это сообщение получено из обработчика onFailure: ' + error)
    }
    function OnComplete(request, status) {
        console.log('Это сообщение получено из обработчика onComplete: ' + status)
    }
</script>


<h2>Данные пользователей</h2>

<div id="loading" class="load" style="display:none">
    <p>Загрузка данных...</p>
</div>

<table>
    <thead>
        <tr><th>Имя</th><th>Фамилия</th><th>Роль</th></tr>
    </thead>
    <tbody id="tableBody">
        @Html.Action("GetPeopleData", new { selectedRole = Model })
    </tbody>
</table>

@using (Ajax.BeginForm(ajaxOptions))
{
    <div>
        @Html.DropDownList("selectedRole", new SelectList(
            new[] { "All" }.Concat(Enum.GetNames(typeof(Role)))))
        <button type="submit">Отобразить</button>
    </div>
}

<div>
    @foreach (string role in Enum.GetNames(typeof(Role)))
    {
        <div class="ajaxLink">
            @Ajax.ActionLink(role, "GetPeople",
                new { selectedRole = role },
                new AjaxOptions
                {
                    UpdateTargetId = "tableBody",
                    Url = Url.Action("GetPeopleData", new { selectedRole = role }),
                    OnBegin = "OnBegin",
                    OnSuccess = "OnSuccess",
                    OnComplete = "OnComplete",
                    OnFailure = "OnFailure"
                })
        </div>
    }
</div>